{"version":3,"sources":["Components/search_bar.js","Components/video_item.js","Components/video_list.js","Components/video_player.js","Components/footer.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","state","term","className","style","src","type","placeholder","value","this","onChange","event","onInputChange","target","setState","onSearchTermChange","Component","VideoListItem","video","imageUrl","snippet","thumbnails","default","url","onClick","onVideoSelect","title","VideoList","videos_items","videos","map","key","etag","VideoDeatil","id","videoId","allowFullScreen","data-toggle","data-target","description","Footer","viewBox","d","href","App","selectedVideo","videoSearch","comp","YTSearch","order","maxResults","console","log","vidos","_","debounce","Boolean","window","location","hostname","match","ReactDOM","render","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c529826.chunk.js","sourcesContent":["import React, { Component } from 'react' // As whenever we change JSX into the normal javascript then it is done by a call like React.createElement()\n//                   |\n//                  \\ /\n//           const Component = React.Component;\n\n// So, to use interpret JSX React module is required to import.\n\n// A functional Component\n// const SearchBar = () => {\n//     return <input />; // returning the JSX. This JSX is being Rendered to the DOM.\n// };\n\n// A class Based Component will have its own property and component.\n// class SearchBar extends React.Component { // inheriting the React.Component class(this is React's Base Component Class)\n//     render(){ // a must method inside a class component\n//         return <input />;\n//     }\n// }\nimport '../style/Logo/search.svg'\n// Cleaning up the Component made above using ES6 syntax\nclass SearchBar extends Component { // inheriting the React.Component\n\n    constructor(props){\n               // console.log(\"lala\");\n        super(props); // super is used to call a Function of the Parent Class(here it is Component)\n        this.state = { term: ''};\n    }\n\n\n    render(){ // a must function inside a class component\n        // console.log(this.state.term);\n        return (\n            <div >\n                    <div className=\"search-bar\">\n                         <a><img style={{\"vertical-align\":\"middle\"}} src=\"../style/Logo/search.svg\" ></img></a>\n                        <input\n                            className=\"search-input\"\n                            type=\"text\"\n                            placeholder=\"Search...\"\n                            value={this.state.term}\n                            onChange={(event) => this.onInputChange(event.target.value)}\n                        />\n                    </div>\n                </div>\n        );// returning the JSX. This JSX is being Rendered to the DOM.\n        // value={this.state.term} make the html element controlled\n    }\n\n    onInputChange(term){\n        // console.log(event_obj.target.value);\n        this.setState({term: term}); // Setting the new State of our Component.\n        this.props.onSearchTermChange(term);\n    }\n\n\n}\n\nexport default SearchBar; // Any file that will import SearchBar will get the SearchBar component.\n\n","import React from 'react'\n\nconst VideoListItem = (props) =>{\n    const video = props.video;\n    // console.log(video);\n    // const selected_video = props.onVideoClick;\n    const imageUrl = video.snippet.thumbnails.default.url;\n    // console.log(video.snippet.title);\n    return (\n        <div>\n            <li onClick={() => props.onVideoSelect(video)} className=\"list-group-item\">\n                <a>\n                <div className=\"media-left\">\n                    <img className=\"media-object\" src={imageUrl}/>\n                </div>\n                  <div className=\"media-body\">\n                    <div className=\"media-heading\">\n                        {video.snippet.title}\n                    </div>\n                  </div>\n              </a>\n            </li>\n        </div>\n    );\n};\nexport default VideoListItem;","import React from 'react';\nimport VideoListItem from './video_item';\n\nconst VideoList = (props) => {\n    const videos_items = props.videos.map((video) =>{\n        return <VideoListItem\n            onVideoSelect = {props.onVideoSelect}\n            key={video.etag} video={video} />\n    }); // an array of videos\n    return (\n        <div>\n            <ul className=\"list-group\" >\n                {videos_items}\n            </ul>\n        </div>\n\n    );\n}\nexport default VideoList;","import React from 'react';\n\nconst VideoDeatil = (props) =>{\n    if(!props.video){\n        return <div className=\"loading\">LOOKING...</div>\n    }\n    const video = props.video;\n    const videoId = video.id.videoId;\n    const url = 'https://www.youtube.com/embed/' + videoId;\n    return(\n        <div>\n            <div className=\"embed-responsive embed-responsive-16by9\">\n                <iframe className=\"embed-responsive-item\" src={url} allowFullScreen> </iframe>\n            </div>\n\n            <div className=\"details\">\n                <div>\n                    <b> {video.snippet.title} </b>\n                </div>\n            </div>\n\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <button type=\"button\" className=\"btn btn-info\" data-toggle=\"collapse\" data-target=\"#desc\"><b>Description</b>\n                    </button>\n                </div>\n                <div className=\"card-body\">\n                    <div id=\"desc\" className=\"collapse\">\n                        <p className=\"card-text\">{video.snippet.description}</p>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n\n\n        </div>\n    );\n}\nexport default VideoDeatil;","import React from 'react'\n\nconst Footer = (props) =>{\n    if(!props.video){\n        return <div></div>;\n    }\n\n    return(\n\n    <div className=\"footer\">\n            Created & Hosted with\n            <svg className=\"heart\" viewBox=\"0 0 32 29.6\">\n                <path d=\"M23.6,0c-3.4,0-6.3,2.7-7.6,5.6C14.7,2.7,11.8,0,8.4,0C3.8,0,0,3.8,0,8.4c0,9.4,9.5,11.9,16,21.2\n\t                    c6.1-9.3,16-12.1,16-21.2C32,3.8,28.2,0,23.6,0z\"/>\n            </svg>\n             by <a style={{\"color\" : '#c10000', \"text-decoration\": \"underline\"}} href=\"https://github.com/ankitsangwan1999\">@ankitsangwan1999</a> at Github Pages.\n    </div>\n\n\n    );\n\n}\n\nexport default Footer;\n\n","// Create a New Component. This will produce some HTML \n\n// to render the component\nimport _ from 'lodash';\nimport React, {Component} from 'react';\n//to insert the rendered app to the DOM \nimport ReactDOM from 'react-dom';\nimport YTSearch from 'youtube-api-search';\nimport SearchBar from \"./Components/search_bar\";\nimport VideoList from \"./Components/video_list\";\nimport VideoDeatil from \"./Components/video_player\";\nimport Footer from \"./Components/footer\";\nimport './style/style.css'\n\n// JSX - can't be interpret by the browser.\n// So, as our project is having webpack and bable installed. they will be used to interpret the JSX and ES6 to the vannila JS which is understood by the browser. \n\n// const API_KEY = 'AIzaSyC0CFmT3iRcG-JQTxQxcexhJR6w32tDT_A'; //1999\nconst API_KEY = 'AIzaSyBZsSBjhhUSR_HUKoeFd3n-eE9rDuIRvyc'; //1955\n// const API_KEY = 'AIzaSyDVMBWZLc5f_9xIKQCLexLeLwuYQNmHq-Q' //199205\n\n\n\nclass App extends Component{ // App(a component) is a const => we cannot reassign App in coming lines.\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {videos: [], selectedVideo: null};\n\t\tthis.videoSearch('MARVEL');\n\t}\n\n\tvideoSearch(term){\n\t\tlet comp = this;\n\t\tvar count = 20;\n\t\tYTSearch(\n\t\t\t{\n\t\t\t\tkey: API_KEY,\n\t\t\t\tterm: term,\n\t\t\t\torder: 'viewCount',\n\t\t\t\tmaxResults: count\n\t\t\t},\n\t\t\tfunction(videos) {\n\t\t\t\tconsole.log(comp);\n\t\t\t\tcomp.setState({vidos: videos, selectedVideo: videos[0]}); // or // this.setState({videos:videos});\n\t\t\t}\n\t\t);\n\t}\n\n\trender() {\n\t\t// console.log(\"HEllo\");\n\n\t\tconst videoSearch = _.debounce((term) => {this.videoSearch(term)}, 1000);\n\n\t\treturn (\n\t\t\t\t<div className=\"parent-div\">\n\t\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t\t<img src=\"../style/Logo/Logo_1.jpg\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<SearchBar onSearchTermChange={term => this.videoSearch(term)} />\n\t\t\t\t\t<VideoDeatil video={this.state.selectedVideo}/>\n\t\t\t\t\t<VideoList onVideoSelect = { selectedVideo => this.setState({selectedVideo}) }\n\t\t\t\t\t\t\t   videos={this.state.videos} />\n\n\t\t\t\t\t<Footer video={this.state.selectedVideo} />\n\t\t\t\t</div>\n\t\t);\n\t}\n\n}\n\n// IMP: SearchBar here means an instance of Class SearchBar imported.\n// IMP:-<SearchBar />   // Means we are Rendering the Search Component, Rendering the SearchBar Component.\n\nexport default App;\n// Take this generated HTML and add it to the DOM.\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('.container'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}